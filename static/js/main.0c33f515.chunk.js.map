{"version":3,"sources":["components/Cards/Card.jsx","api/index.jsx","components/Chart/Chart.jsx","components/Countrypicker/Countrypicker.jsx","components/Navbar/Navbar.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","index.js","image/infected.jpg","image/death.jpg","image/recovered.jpg","image/home.jpg"],"names":["Cards","props","class","style","width","src","head","alt","start","end","case","duration","separator","title","Date","date","toDateString","url","fetchData","value","a","changeurl","axios","get","data","modifieddata","confirm","confirmed","death","deaths","recover","recovered","lastUpdate","fetchdailydata","map","dailydata","total","reportDate","countries","country","name","Chart","useState","setdailydata","useEffect","fetchapi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","className","Countrypicker","setcountry","fetchcountries","FormControl","NativeSelect","onChange","setdata","index","key","Navbar","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","activeClassName","Home","homeimg","App","setvalue","setdeath","setrecover","setconfirm","last","setlast","then","event","target","path","component","infect","deat","recov","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0c33f515.chunk.js","sourcesContent":["import React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport './Card.css';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst Cards =(props)=>{\r\n    \r\n    return(\r\n        <>\r\n        <div class=\"card\" style={{width: '18rem'}}>\r\n  <img src={props.head} class=\"card-img-top\" alt=\"...\"/>\r\n  <div class=\"card-body\">\r\n  \r\n    <h5 class=\"card-title\"><CountUp start={0} end={props.case} duration='4' separator=','></CountUp></h5>\r\n    <p class=\"card-text\">{props.title}</p>\r\n    <h3>{new Date(props.date).toDateString()}</h3>\r\n  </div>\r\n</div>\r\n        </>\r\n    );\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (value) =>{\r\n        let changeurl= url;\r\n        if(value){\r\n                changeurl=`${url}/countries/${value}`\r\n        }\r\n        const {data} = await axios.get(changeurl);\r\n        const modifieddata ={\r\n                confirm: data.confirmed.value,\r\n                death: data.deaths.value,\r\n                recover: data.recovered.value,\r\n                lastUpdate:data.lastUpdate,\r\n        }\r\n        return modifieddata;\r\n\r\n      \r\n}\r\nexport const fetchdailydata = async()=>{\r\n        const {data}= await axios.get(`${url}/daily`);\r\n        const modifieddata = data.map((dailydata)=>({\r\n                confirmed: dailydata.confirmed.total,\r\n                deaths: dailydata.deaths.total,\r\n                date: dailydata.reportDate,\r\n        }));\r\n        return modifieddata;\r\n\r\n\r\n}\r\nexport const countries = async ()=>{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name)\r\n\r\n\r\n    }","import React, { useState, useEffect } from 'react';\r\nimport {fetchdailydata} from '../../api';\r\nimport {Line ,Bar} from 'react-chartjs-2';\r\nimport './../Chart/Chart.css'\r\nconst Chart=()=>{\r\n    const [dailydata, setdailydata]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchapi = async ()=>{\r\n            setdailydata(await fetchdailydata());\r\n        }\r\n        fetchapi();\r\n        \r\n    });\r\n    const lineChart=(\r\n        dailydata.length ?( <Line data={{\r\n            labels: dailydata.map(({ date })=> date ),\r\n            datasets:[{\r\n                data: dailydata.map(({confirmed})=> confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n                },{\r\n                 data: dailydata.map(({ deaths })=> deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0,0,0.5)',\r\n                fill: true,\r\n\r\n                }],\r\n        }}/>): null\r\n    );\r\n    return(\r\n        <>\r\n        <div className='container-fluid nav_bg'>\r\n    <div className ='row'>\r\n    <div className='col-10 mx-auto'>\r\n           {lineChart}\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport {countries} from '../../api';\r\nimport {NativeSelect , FormControl} from '@material-ui/core';\r\nimport './Countrypicker.css';\r\nconst Countrypicker =(props)=>{\r\n    \r\n    \r\n    const [country,setcountry]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchcountries = async()=>{\r\n            setcountry(await countries());\r\n        }\r\n    fetchcountries();\r\n    },[setcountry]);\r\n    \r\n    \r\n    return(\r\n        <>\r\n        <div className='select-op'>\r\n        <FormControl >\r\n            <NativeSelect onChange={props.setdata} value={props.value}>\r\n                <option value='Global'>global</option>\r\n               {country.map((value,index)=> <option value={value} key={index}>{value}</option> )}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </div>\r\n        \r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Countrypicker;","import React from 'react';\r\nimport './Navbar.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\n\r\nconst Navbar=()=>{\r\n    return (<>\r\n     <div className='container-fluid nav_bg'>\r\n            <div className='row'>\r\n                <div className='col-sm-10 mx-auto'>\r\n\r\n                \r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <NavLink className=\"navbar-brand\" to='/covid'>CORONA METER</NavLink>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <NavLink exact activeClassName='active_nav' className=\"nav-link\"  to='/covid'>Home</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink exact activeClassName='active_nav' className=\"nav-link\" to=\"/statistics\">Statistics</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink exact activeClassName='active_nav' className=\"nav-link\" to=\"/graph\">Graph</NavLink>\r\n        </li>\r\n        \r\n      </ul>\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n</div>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport homeimg from '../../image/home.jpg';\r\nimport './Home.css';\r\n\r\nconst Home = ()=>{\r\n    return(<>\r\n    <section id='header' className='d-flex align-items-center'>\r\n    <div className='container-fluid nav_bg'>\r\n    <div className ='row'>\r\n    <div className='col-10 mx-auto'>\r\n    <div className='row'>\r\n    <div className='col-md-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex justify-content-center flex-column'>\r\n    \r\n   <h1>Stay Safe</h1>\r\n   <h2>Stay Home</h2>\r\n\r\n    </div> \r\n    <div className='col-lg-6 order-1 order-lg-2 header-img'>\r\n\r\n<img src={homeimg} className='img-fluid animated' alt='home ing'/>\r\n    </div>\r\n\r\n    </div>\r\n\r\n    </div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n    </section>\r\n    </>\r\n    )\r\n}\r\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Cards from './components/Cards/Card';\nimport Chart from './components/Chart/Chart';\nimport Countrypicker from './components/Countrypicker/Countrypicker';\nimport {fetchData} from './api';\nimport infect from './image/infected.jpg';\nimport deat from './image/death.jpg';\nimport recov from './image/recovered.jpg';\nimport Navbar from './components/Navbar/Navbar';\nimport {Switch ,Route} from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle';\n\n\n\nconst App =()=> {\n  const [value,setvalue]=useState();\n  const [death,setdeath]=useState();\n  const [recover,setrecover]=useState();\n  const [confirm,setconfirm]=useState();\n  const [last,setlast]=useState();\n  useEffect(()=>{\n    fetchData(value).then((value)=>{\n      setconfirm(value.confirm);\n      setdeath(value.death);\n      setrecover(value.recover);\n      setlast(value.lastUpdate);\n    })\n  \n  });\n  const setdata=(event)=>{\n    setvalue(event.target.value);\n  \n    \n    \n}\n \n  return (\n    <>\n    <Navbar/>\n    \n    <Switch>\n      <Route exact path='/covid' component={Home}></Route>\n      <Route exact path='/statistics' component={()=>{return(\n        <>\n        <div className='container-fluid nav_bg mt-3'>\n        <div className='row'>\n        <div className='col-10 mx-auto mb-4'>\n        <div className='picker d-flex justify-content-center'>\n        <Countrypicker setdata={setdata} value={value}/>\n        <br></br>\n        <br></br>\n        </div>\n        <div className='row'>\n        <div className='col-3 mx-auto '>\n        <Cards title='Infected' case={confirm} date={last} head={infect} />\n        </div>\n        <div className='col-3 mx-auto'>\n    <Cards title='Death' case={death} date={last} head={deat} /> \n    </div>\n    <div className='col-3 mx-auto'>\n    <Cards title='Recovered' case={recover} date={last} head={recov}/>\n    </div>\n    </div>\n    </div>\n        </div>\n        </div>\n      </>)}}></Route>\n\n       <Route exact path='/graph' component={Chart}></Route>\n    </Switch>\n    \n  \n    \n    </>\n    \n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/infected.4071cfeb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/death.e7baea8f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/recovered.d0fb84f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home.99e37d9f.jpg\";"],"sourceRoot":""}